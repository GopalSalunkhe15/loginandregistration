{"ast":null,"code":"var _jsxFileName = \"/home/gopal.salunkhe/Desktop/assignment/src/component/registration/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport RegistrationWithInput from \"../reusable/registrationWithInputField\";\nimport { registrationDetail } from \"../../redux/action\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    registrationDetail: e => {\n      dispatch(registrationDetail(e));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    registrationDetail: state.registrationDetail,\n    registrationForm: state.registrationWithInputFeild,\n    inputWithRadioButton: state.inputWithRadioButton,\n    subscribedUser: state.subscribedUser\n  };\n};\n\nconst Registration = ({\n  inputWithRadioButton,\n  registrationForm,\n  subscribedUser,\n  ...props\n}) => {\n  _s();\n\n  const [registrationDetail, setRegistrationDetail] = useState({\n    gender: registrationForm.gender.checkedValue\n  });\n  const [errorMsg, setErrorMsg] = useState([]);\n  const history = useHistory();\n\n  const onInputChange = e => {\n    let tagName = e.target.name;\n    let value = e.target.value;\n    let copyOfRegistrationDetail = { ...registrationDetail\n    };\n    copyOfRegistrationDetail[tagName] = value;\n    setRegistrationDetail(copyOfRegistrationDetail);\n  };\n\n  const signUpAccount = () => {\n    debugger;\n\n    if (validateRegistrationDetail()) {\n      props.registrationDetail(registrationDetail);\n      setRegistrationDetail({});\n      let path = `login`;\n      history.push(path);\n    }\n  };\n\n  const validateRegistrationDetail = () => {\n    let errorArray = [];\n    Object.keys(registrationForm).some(value => {\n      if (subscribedUser === null || subscribedUser === void 0 ? void 0 : subscribedUser[registrationDetail === null || registrationDetail === void 0 ? void 0 : registrationDetail.userName]) {\n        errorArray.push(\"user is already present\");\n      } else if (!(registrationDetail === null || registrationDetail === void 0 ? void 0 : registrationDetail[value])) {\n        var _registrationForm$val, _registrationForm$val2, _registrationForm$val3;\n\n        let error = registrationForm === null || registrationForm === void 0 ? void 0 : (_registrationForm$val = registrationForm[value]) === null || _registrationForm$val === void 0 ? void 0 : (_registrationForm$val2 = _registrationForm$val.validations) === null || _registrationForm$val2 === void 0 ? void 0 : (_registrationForm$val3 = _registrationForm$val2[0]) === null || _registrationForm$val3 === void 0 ? void 0 : _registrationForm$val3.msg;\n        errorArray.push(error.replace(\"__FIELD_TITLE__\", value));\n      }\n    });\n\n    if (errorArray.length) {\n      setErrorMsg([...new Set(errorArray)]);\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration-container-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"registration-lable\",\n      children: \"Registration Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegistrationWithInput, {\n      onInputChange: onInputChange,\n      inputProps: registrationForm,\n      userInput: registrationDetail,\n      onSubmit: signUpAccount,\n      subscribedUser: subscribedUser,\n      errorMsg: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration-button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signUpAccount,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"login-link-wrapper\",\n        to: \"/login\",\n        children: \"log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Registration, \"jubdSWZLsfOjoZJMvea2Kdfxhtw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Registration;\nexport default connect(mapStateToProps, mapDispatchtoProps)(Registration);\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/gopal.salunkhe/Desktop/assignment/src/component/registration/index.js"],"names":["React","useState","connect","RegistrationWithInput","registrationDetail","Link","useHistory","mapDispatchtoProps","dispatch","e","mapStateToProps","state","registrationForm","registrationWithInputFeild","inputWithRadioButton","subscribedUser","Registration","props","setRegistrationDetail","gender","checkedValue","errorMsg","setErrorMsg","history","onInputChange","tagName","target","name","value","copyOfRegistrationDetail","signUpAccount","validateRegistrationDetail","path","push","errorArray","Object","keys","some","userName","error","validations","msg","replace","length","Set"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport RegistrationWithInput from \"../reusable/registrationWithInputField\";\nimport { registrationDetail } from \"../../redux/action\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport \"./index.css\";\nconst mapDispatchtoProps = dispatch => {\n  return {\n    registrationDetail: e => {\n      dispatch(registrationDetail(e));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    registrationDetail: state.registrationDetail,\n    registrationForm: state.registrationWithInputFeild,\n    inputWithRadioButton: state.inputWithRadioButton,\n    subscribedUser: state.subscribedUser\n  };\n};\n\nconst Registration = ({\n  inputWithRadioButton,\n  registrationForm,\n  subscribedUser,\n  ...props\n}) => {\n  const [registrationDetail, setRegistrationDetail] = useState({\n    gender: registrationForm.gender.checkedValue\n  });\n  const [errorMsg, setErrorMsg] = useState([]);\n  const history = useHistory();\n\n  const onInputChange = e => {\n    let tagName = e.target.name;\n    let value = e.target.value;\n    let copyOfRegistrationDetail = { ...registrationDetail };\n    copyOfRegistrationDetail[tagName] = value;\n    setRegistrationDetail(copyOfRegistrationDetail);\n  };\n\n  const signUpAccount = () => {\n    debugger;\n    if (validateRegistrationDetail()) {\n      props.registrationDetail(registrationDetail);\n      setRegistrationDetail({});\n      let path = `login`;\n      history.push(path);\n    }\n  };\n\n  const validateRegistrationDetail = () => {\n    let errorArray = [];\n\n    Object.keys(registrationForm).some(value => {\n      if (subscribedUser?.[registrationDetail?.userName]) {\n        errorArray.push(\"user is already present\");\n      } else if (!registrationDetail?.[value]) {\n        let error = registrationForm?.[value]?.validations?.[0]?.msg;\n        errorArray.push(error.replace(\"__FIELD_TITLE__\", value));\n      }\n    });\n    if (errorArray.length) {\n      setErrorMsg([...new Set(errorArray)]);\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  return (\n    <div className = \"registration-container-wrapper\">\n      <label className=\"registration-lable\">Registration Form</label>\n      <RegistrationWithInput\n        onInputChange={onInputChange}\n        inputProps={registrationForm}\n        userInput={registrationDetail}\n        onSubmit={signUpAccount}\n        subscribedUser={subscribedUser}\n        errorMsg={errorMsg}\n      />\n      <div className=\"registration-button-container\">\n        <button onClick={signUpAccount}>Sign Up</button>\n        {}\n        <Link className=\"login-link-wrapper\" to=\"/login\">\n          log in\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchtoProps\n)(Registration);\n"]},"metadata":{},"sourceType":"module"}