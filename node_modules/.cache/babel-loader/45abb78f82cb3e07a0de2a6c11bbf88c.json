{"ast":null,"code":"var _jsxFileName = \"/home/gopal.salunkhe/Desktop/assignment/src/component/registration/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport RegistrationWithInput from \"../reusable/registrationWithInputField\";\nimport { registrationDetail } from \"../../redux/action\";\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    registrationDetail: e => {\n      dispatch(registrationDetail(e));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    registrationDetail: state.registrationDetail,\n    registrationForm: state.registrationWithInputFeild,\n    inputWithRadioButton: state.inputWithRadioButton\n  };\n};\n\nconst Registration = ({\n  inputWithRadioButton,\n  registrationForm,\n  ...props\n}) => {\n  _s();\n\n  const [registrationDetail, setRegistrationDetail] = useState({\n    gender: registrationForm.gender.checkedValue\n  });\n  const history = useHistory();\n\n  const onInputChange = e => {\n    let tagName = e.target.name;\n    let value = e.target.value;\n    let copyOfRegistrationDetail = { ...registrationDetail\n    };\n    copyOfRegistrationDetail[tagName] = value;\n    setRegistrationDetail(copyOfRegistrationDetail);\n    console.log(copyOfRegistrationDetail);\n  };\n\n  const validateRegistrationDetail = () => {\n    debugger; //   if(registrationDetail)\n\n    let b = registrationForm;\n    let a = registrationDetail;\n    debugger;\n    Object.keys(registrationForm).map(value => {\n      if (!registrationDetail[value]) {\n        console.log();\n      }\n    });\n  };\n\n  const signUpAccount = () => {\n    validateRegistrationDetail();\n    props.registrationDetail(registrationDetail); // setRegistrationDetail({});\n    // let path = `login`;\n    // history.push(path);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Registration Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegistrationWithInput, {\n      onInputChange: onInputChange,\n      inputProps: registrationForm,\n      userInput: registrationDetail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signUpAccount,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      children: \"log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Registration, \"dcIVNjThFUeOyZVOQIcuMIGPPIg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Registration;\nexport default connect(mapStateToProps, mapDispatchtoProps)(Registration);\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/gopal.salunkhe/Desktop/assignment/src/component/registration/index.js"],"names":["React","useState","connect","RegistrationWithInput","registrationDetail","BrowserRouter","Router","Switch","Route","Link","useHistory","mapDispatchtoProps","dispatch","e","mapStateToProps","state","registrationForm","registrationWithInputFeild","inputWithRadioButton","Registration","props","setRegistrationDetail","gender","checkedValue","history","onInputChange","tagName","target","name","value","copyOfRegistrationDetail","console","log","validateRegistrationDetail","b","a","Object","keys","map","signUpAccount"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport RegistrationWithInput from \"../reusable/registrationWithInputField\";\nimport { registrationDetail } from \"../../redux/action\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\";\nconst mapDispatchtoProps = dispatch => {\n  return {\n    registrationDetail: e => {\n      dispatch(registrationDetail(e));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    registrationDetail: state.registrationDetail,\n    registrationForm: state.registrationWithInputFeild,\n    inputWithRadioButton: state.inputWithRadioButton\n  };\n};\n\nconst Registration = ({ inputWithRadioButton, registrationForm, ...props }) => {\n  const [registrationDetail, setRegistrationDetail] = useState({\n    gender: registrationForm.gender.checkedValue\n  });\n  const history = useHistory();\n\n  const onInputChange = e => {\n    let tagName = e.target.name;\n    let value = e.target.value;\n    let copyOfRegistrationDetail = { ...registrationDetail };\n    copyOfRegistrationDetail[tagName] = value;\n    setRegistrationDetail(copyOfRegistrationDetail);\n    console.log(copyOfRegistrationDetail);\n  };\n\n  const validateRegistrationDetail = () => {\n    debugger;\n    //   if(registrationDetail)\n    let b = registrationForm;\n    let a = registrationDetail;\n    debugger;\n    Object.keys(registrationForm).map((value) => {\n         if(!registrationDetail[value]){\n             console.log()\n         }\n    })\n  };\n\n  const signUpAccount = () => {\n    validateRegistrationDetail()\n    props.registrationDetail(registrationDetail);\n    // setRegistrationDetail({});\n    // let path = `login`;\n    // history.push(path);\n  };\n\n  return (\n    <div>\n      <label>Registration Form</label>\n      <RegistrationWithInput\n        onInputChange={onInputChange}\n        inputProps={registrationForm}\n        userInput={registrationDetail}\n      />\n      <button onClick={signUpAccount}>Sign Up</button>\n      {}\n      <Link to=\"/login\">log in</Link>\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchtoProps\n)(Registration);\n"]},"metadata":{},"sourceType":"module"}