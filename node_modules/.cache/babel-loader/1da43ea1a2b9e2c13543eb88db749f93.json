{"ast":null,"code":"var _jsxFileName = \"/home/gopal.salunkhe/Desktop/loginandregistration/src/component/reusable/inputField.js\";\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst InputField = ({\n  inputProps,\n  userInput,\n  onInputChange,\n  onSubmit,\n  subscribedUser,\n  errorMsg,\n  ...props\n}) => {\n  const getInputTextTypeDom = value => {\n    var _inputProps$value, _inputProps$value2, _inputProps$value3, _inputProps$value4;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: inputProps === null || inputProps === void 0 ? void 0 : (_inputProps$value = inputProps[value]) === null || _inputProps$value === void 0 ? void 0 : _inputProps$value.lable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: inputProps === null || inputProps === void 0 ? void 0 : (_inputProps$value2 = inputProps[value]) === null || _inputProps$value2 === void 0 ? void 0 : _inputProps$value2.placeholder,\n          required: true,\n          type: inputProps === null || inputProps === void 0 ? void 0 : (_inputProps$value3 = inputProps[value]) === null || _inputProps$value3 === void 0 ? void 0 : _inputProps$value3.inputType,\n          onChange: onInputChange,\n          name: inputProps === null || inputProps === void 0 ? void 0 : (_inputProps$value4 = inputProps[value]) === null || _inputProps$value4 === void 0 ? void 0 : _inputProps$value4.tagName,\n          value: userInput[value]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  const getRadioButtonTypeDom = value => {\n    debugger;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [value, \" :\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: inputProps[value].value.map(lable => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: lable,\n              name: value,\n              checked: lable == userInput[value],\n              onChange: onInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n              children: lable\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: Object.keys(inputProps).map(value => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"input-form-container\",\n          children: inputProps[value].type == \"editableRadioButton\" ? getRadioButtonTypeDom(value) : getInputTextTypeDom(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), (errorMsg === null || errorMsg === void 0 ? void 0 : errorMsg.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: errorMsg.map(value => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"* \", value]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_c = InputField;\nexport default InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["/home/gopal.salunkhe/Desktop/loginandregistration/src/component/reusable/inputField.js"],"names":["React","useState","InputField","inputProps","userInput","onInputChange","onSubmit","subscribedUser","errorMsg","props","getInputTextTypeDom","value","lable","placeholder","inputType","tagName","getRadioButtonTypeDom","map","Object","keys","type","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\nconst InputField = ({\n  inputProps,\n  userInput,\n  onInputChange,\n  onSubmit,\n  subscribedUser,\n  errorMsg,\n  ...props\n}) => {\n  const getInputTextTypeDom = value => {\n    return (\n      <>\n        <td>{inputProps?.[value]?.lable}</td>\n        <td>\n          <input\n          placeholder={inputProps?.[value]?.placeholder}\n            required\n            type={inputProps?.[value]?.inputType}\n            onChange={onInputChange}\n            name={inputProps?.[value]?.tagName}\n            value={userInput[value]}\n          />\n        </td>\n      </>\n    );\n  };\n  const getRadioButtonTypeDom = value => {\n    debugger\n    return (\n      <>\n        <td>\n          <label>{value} :</label>\n        </td>\n        <td>\n          {inputProps[value].value.map(lable => {\n            return (\n              <>\n                <input\n                  type=\"radio\"\n                  value={lable}\n                  name={value}\n                  checked={lable == userInput[value]}\n                  onChange={onInputChange}\n                />\n                <lable>{lable}</lable>\n              </>\n            );\n          })}\n        </td>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <table>\n        {Object.keys(inputProps).map(value => {\n          return (\n            <tr className=\"input-form-container\">\n              {inputProps[value].type == \"editableRadioButton\"\n                ? getRadioButtonTypeDom(value)\n                : getInputTextTypeDom(value)}\n            </tr>\n          );\n        })}\n      </table>\n      {errorMsg?.length > 0 && (\n        <div className=\"error-container\">\n          {errorMsg.map(value => {\n            return (\n              <div>\n                <span>* {value}</span>\n              </div>\n            );\n          })}\n        </div>\n      )}\n     \n    </div>\n  );\n};\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}