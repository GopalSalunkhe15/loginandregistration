{"ast":null,"code":"var _jsxFileName = \"/home/gopal.salunkhe/Desktop/assignment/src/component/registration/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport RegistrationWithInput from \"../reusable/registrationWithInputField\";\nimport { registrationDetail } from \"../../redux/action\";\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory } from \"react-router-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    registrationDetail: e => {\n      dispatch(registrationDetail(e));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    registrationDetail: state.registrationDetail,\n    registrationForm: state.registrationWithInputFeild,\n    inputWithRadioButton: state.inputWithRadioButton,\n    subscribedUser: state.subscribedUser\n  };\n};\n\nconst Registration = ({\n  inputWithRadioButton,\n  registrationForm,\n  subscribedUser,\n  ...props\n}) => {\n  _s();\n\n  const [registrationDetail, setRegistrationDetail] = useState({\n    gender: registrationForm.gender.checkedValue\n  });\n  const [errorMsg, setErrorMsg] = useState([]);\n  const history = useHistory();\n\n  const onInputChange = e => {\n    let tagName = e.target.name;\n    let value = e.target.value;\n    let copyOfRegistrationDetail = { ...registrationDetail\n    };\n    copyOfRegistrationDetail[tagName] = value;\n    setRegistrationDetail(copyOfRegistrationDetail);\n    console.log(copyOfRegistrationDetail);\n  }; //   const validateRegistrationDetail = () => {\n  //     debugger;\n  //     //   if(registrationDetail)\n  //     let b = registrationForm;\n  //     let a = registrationDetail;\n  //     debugger;\n  //     Object.keys(registrationForm).map((value) => {\n  //          if(!registrationDetail[value]){\n  //              let error = registrationForm[value].validations[0].msg;\n  //             //  alert(error.replace(\"__FIELD_TITLE__\", value))\n  //          }\n  //         //  else if()\n  //     })\n  //   };\n\n\n  const signUpAccount = () => {\n    debugger;\n    validateRegistrationDetail();\n    props.registrationDetail(registrationDetail);\n    setRegistrationDetail({});\n    let path = `login`;\n    history.push(path);\n  };\n\n  const validateRegistrationDetail = () => {\n    let errorArray = []; // let registrationForm = inputProps;\n\n    debugger; // let registrationDetail = userInput;\n\n    Object.keys(registrationForm).map(value => {\n      if (subscribedUser === null || subscribedUser === void 0 ? void 0 : subscribedUser[registrationDetail === null || registrationDetail === void 0 ? void 0 : registrationDetail.registrationMsg]) {\n        errorArray.push(\"user is already present\");\n      } else if (!(registrationDetail === null || registrationDetail === void 0 ? void 0 : registrationDetail[value])) {\n        var _registrationForm$val, _registrationForm$val2, _registrationForm$val3;\n\n        let error = registrationForm === null || registrationForm === void 0 ? void 0 : (_registrationForm$val = registrationForm[value]) === null || _registrationForm$val === void 0 ? void 0 : (_registrationForm$val2 = _registrationForm$val.validations) === null || _registrationForm$val2 === void 0 ? void 0 : (_registrationForm$val3 = _registrationForm$val2[0]) === null || _registrationForm$val3 === void 0 ? void 0 : _registrationForm$val3.msg;\n        errorArray.push(error.replace(\"__FIELD_TITLE__\", value));\n      }\n    });\n\n    if (errorArray.length) {\n      setErrorMsg(errorArray);\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Registration Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegistrationWithInput, {\n      onInputChange: onInputChange,\n      inputProps: registrationForm,\n      userInput: registrationDetail,\n      onSubmit: signUpAccount,\n      subscribedUser: subscribedUser,\n      errorMsg: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration-button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signUpAccount,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"login-link-wrapper\",\n        to: \"/login\",\n        children: \"log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Registration, \"jubdSWZLsfOjoZJMvea2Kdfxhtw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Registration;\nexport default connect(mapStateToProps, mapDispatchtoProps)(Registration);\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/gopal.salunkhe/Desktop/assignment/src/component/registration/index.js"],"names":["React","useState","connect","RegistrationWithInput","registrationDetail","BrowserRouter","Router","Switch","Route","Link","useHistory","mapDispatchtoProps","dispatch","e","mapStateToProps","state","registrationForm","registrationWithInputFeild","inputWithRadioButton","subscribedUser","Registration","props","setRegistrationDetail","gender","checkedValue","errorMsg","setErrorMsg","history","onInputChange","tagName","target","name","value","copyOfRegistrationDetail","console","log","signUpAccount","validateRegistrationDetail","path","push","errorArray","Object","keys","map","registrationMsg","error","validations","msg","replace","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport RegistrationWithInput from \"../reusable/registrationWithInputField\";\nimport { registrationDetail } from \"../../redux/action\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\";\n\nimport \"./index.css\"\nconst mapDispatchtoProps = dispatch => {\n  return {\n    registrationDetail: e => {\n      dispatch(registrationDetail(e));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    registrationDetail: state.registrationDetail,\n    registrationForm: state.registrationWithInputFeild,\n    inputWithRadioButton: state.inputWithRadioButton,\n    subscribedUser: state.subscribedUser\n  };\n};\n\nconst Registration = ({\n  inputWithRadioButton,\n  registrationForm,\n  subscribedUser,\n  ...props\n}) => {\n  const [registrationDetail, setRegistrationDetail] = useState({\n    gender: registrationForm.gender.checkedValue\n  });\n  const [errorMsg, setErrorMsg] = useState([]);\n  const history = useHistory();\n\n  const onInputChange = e => {\n    let tagName = e.target.name;\n    let value = e.target.value;\n    let copyOfRegistrationDetail = { ...registrationDetail };\n    copyOfRegistrationDetail[tagName] = value;\n    setRegistrationDetail(copyOfRegistrationDetail);\n    console.log(copyOfRegistrationDetail);\n  };\n\n  //   const validateRegistrationDetail = () => {\n  //     debugger;\n  //     //   if(registrationDetail)\n  //     let b = registrationForm;\n  //     let a = registrationDetail;\n  //     debugger;\n  //     Object.keys(registrationForm).map((value) => {\n  //          if(!registrationDetail[value]){\n  //              let error = registrationForm[value].validations[0].msg;\n  //             //  alert(error.replace(\"__FIELD_TITLE__\", value))\n  //          }\n  //         //  else if()\n  //     })\n  //   };\n\n  const signUpAccount = () => {\n    debugger;\n    validateRegistrationDetail()\n    props.registrationDetail(registrationDetail);\n    setRegistrationDetail({});\n    let path = `login`;\n    history.push(path);\n  };\n\n  const validateRegistrationDetail = () => {\n    let errorArray = [];\n    // let registrationForm = inputProps;\n    debugger;\n    // let registrationDetail = userInput;\n    Object.keys(registrationForm).map(value => {\n      if(subscribedUser?.[registrationDetail?.registrationMsg]){\n        errorArray.push(\"user is already present\")\n      }else if (!registrationDetail?.[value]) {\n        let error = registrationForm?.[value]?.validations?.[0]?.msg;\n        errorArray.push(error.replace(\"__FIELD_TITLE__\", value));\n      } \n    });\n    if(errorArray.length){\n      setErrorMsg(errorArray);\n      return false\n    }\n    else {\n      return true\n    }\n    \n  };\n\n  return (\n    <div>\n      <label>Registration Form</label>\n      <RegistrationWithInput\n        onInputChange={onInputChange}\n        inputProps={registrationForm}\n        userInput={registrationDetail}\n        onSubmit={signUpAccount}\n        subscribedUser={subscribedUser}\n        errorMsg = {errorMsg}\n      />\n      <div className= \"registration-button-container\">\n      <button onClick={signUpAccount}>Sign Up</button>\n      {}\n      <Link className=\"login-link-wrapper\" to=\"/login\">log in</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchtoProps\n)(Registration);\n"]},"metadata":{},"sourceType":"module"}