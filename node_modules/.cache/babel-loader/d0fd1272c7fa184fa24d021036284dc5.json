{"ast":null,"code":"var _jsxFileName = \"/home/gopal.salunkhe/Desktop/assignment/src/component/reusable/registrationWithInputField.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegistrationWithInput = ({\n  inputProps,\n  userInput,\n  onInputChange,\n  onSubmit,\n  ...props\n}) => {\n  _s();\n\n  const [errorMsg, setErrorMsg] = useState([]);\n\n  const getInputTextTypeDom = value => {\n    var _inputProps$value, _inputProps$value2, _inputProps$value3;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n        children: inputProps === null || inputProps === void 0 ? void 0 : (_inputProps$value = inputProps[value]) === null || _inputProps$value === void 0 ? void 0 : _inputProps$value.lable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: inputProps === null || inputProps === void 0 ? void 0 : (_inputProps$value2 = inputProps[value]) === null || _inputProps$value2 === void 0 ? void 0 : _inputProps$value2.inputType,\n        onChange: onInputChange,\n        name: inputProps === null || inputProps === void 0 ? void 0 : (_inputProps$value3 = inputProps[value]) === null || _inputProps$value3 === void 0 ? void 0 : _inputProps$value3.tagName,\n        value: userInput[value]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  };\n\n  const getRadioButtonTypeDom = value => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [value, \" :\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), inputProps[value].value.map(lable => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: lable,\n            name: value,\n            checked: lable == userInput[value],\n            onChange: onInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n            children: lable\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  };\n\n  const validateRegistrationDetail = () => {\n    debugger; //   if(registrationDetail)\n\n    let errorArray = [...errorMsg];\n    let registrationForm = inputProps;\n    let registrationDetail = userInput;\n    debugger;\n    Object.keys(registrationForm).map(value => {\n      if (!registrationDetail[value]) {\n        let error = registrationForm[value].validations[0].msg;\n        errorArray.push(error.replace(\"__FIELD_TITLE__\", value));\n      }\n    });\n    setErrorMsg(...errorArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(inputProps).map(value => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: inputProps[value].type == \"editableRadioButton\" ? getRadioButtonTypeDom(value) : getInputTextTypeDom(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), errorMsg.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorMsg.map(value => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: validateRegistrationDetail,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationWithInput, \"fyYbpfD8aEKusT8Jn9EeD5pwjSQ=\");\n\n_c = RegistrationWithInput;\nexport default RegistrationWithInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationWithInput\");","map":{"version":3,"sources":["/home/gopal.salunkhe/Desktop/assignment/src/component/reusable/registrationWithInputField.js"],"names":["React","useState","RegistrationWithInput","inputProps","userInput","onInputChange","onSubmit","props","errorMsg","setErrorMsg","getInputTextTypeDom","value","lable","inputType","tagName","getRadioButtonTypeDom","map","validateRegistrationDetail","errorArray","registrationForm","registrationDetail","Object","keys","error","validations","msg","push","replace","type","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nconst RegistrationWithInput = ({\n  inputProps,\n  userInput,\n  onInputChange,\n  onSubmit,\n  ...props\n}) => {\n  const [errorMsg, setErrorMsg] = useState([]);\n  const getInputTextTypeDom = value => {\n    return (\n      <div>\n        <lable>{inputProps?.[value]?.lable}</lable>\n        <input\n          required\n          type={inputProps?.[value]?.inputType}\n          onChange={onInputChange}\n          name={inputProps?.[value]?.tagName}\n          value={userInput[value]}\n        />\n      </div>\n    );\n  };\n  const getRadioButtonTypeDom = value => {\n    return (\n      <div>\n        <label>{value} :</label>\n        {inputProps[value].value.map(lable => {\n          return (\n            <>\n              <input\n                type=\"radio\"\n                value={lable}\n                name={value}\n                checked={lable == userInput[value]}\n                onChange={onInputChange}\n              />\n              <lable>{lable}</lable>\n            </>\n          );\n        })}\n        {/* <lable>{inputProps?.[value]?.lable}</lable>\n        <input\n          type={inputProps?.[value]?.inputType}\n          onChange={onInputChange}\n          name={inputProps?.[value]?.tagName}\n        /> */}\n      </div>\n    );\n  };\n\n  const validateRegistrationDetail = () => {\n    debugger;\n    //   if(registrationDetail)\n    let errorArray = [...errorMsg];\n    let registrationForm = inputProps;\n    let registrationDetail = userInput;\n    debugger;\n    Object.keys(registrationForm).map(value => {\n      if (!registrationDetail[value]) {\n        let error = registrationForm[value].validations[0].msg;\n        errorArray.push(error.replace(\"__FIELD_TITLE__\", value));\n      }\n    });\n    setErrorMsg(...errorArray);\n  };\n\n  return (\n    <div>\n      <div>\n        {Object.keys(inputProps).map(value => {\n          return (\n            <div>\n              {inputProps[value].type == \"editableRadioButton\"\n                ? getRadioButtonTypeDom(value)\n                : getInputTextTypeDom(value)}\n              {/* <lable>{inputProps?.[value]?.lable}</lable>\n              <input\n                type={inputProps?.[value]?.inputType}\n                onChange={onInputChange}\n                name={inputProps?.[value]?.tagName}\n              /> */}\n            </div>\n          );\n        })}\n      </div>\n      {errorMsg.length > 0 && (\n        <div>\n          {errorMsg.map(value => {\n            return <span>{value}</span>;\n          })}\n        </div>\n      )}\n      <button onClick={validateRegistrationDetail}>Sign Up</button>\n    </div>\n  );\n};\n\nexport default RegistrationWithInput;\n"]},"metadata":{},"sourceType":"module"}