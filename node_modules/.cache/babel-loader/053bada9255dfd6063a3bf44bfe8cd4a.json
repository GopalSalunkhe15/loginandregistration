{"ast":null,"code":"var _jsxFileName = \"/home/gopal.salunkhe/Desktop/assignment/src/component/login/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport RegistrationWithInput from \"../reusable/registrationWithInputField\";\nimport \"./index.css\";\nimport { connect } from \"react-redux\";\nimport { loginUser, registrationDetail } from \"../../redux/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet user = require(\"../../registration/registration\");\n\nconst mapStateToProps = state => {\n  debugger;\n  return {\n    loginUser: state.loginUser,\n    registrationDetail: state.registrationDetail\n  };\n};\n\nconst mapDispatchtoProps = dispatch => {\n  debugger;\n  return {\n    loginUser: e => {\n      dispatch(loginUser(e));\n    },\n    registrationDetail: e => {\n      dispatch(registrationDetail(e));\n    }\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  debugger;\n  const [loginUserNameAndPassword, setLoginUserNameAndPassword] = useState({});\n\n  const checkValidation = UserDetail => {\n    debugger;\n    let userName = UserDetail.userName;\n\n    if (!user.subscribedUser[userName]) {\n      alert(\"user is not present in db\");\n    }\n\n    if (user.subscribedUser[userName] && user.subscribedUser[userName].password != UserDetail.password) {\n      alert(\"please enter correct password\");\n    }\n  };\n\n  const goToWelcomePage = () => {\n    if (checkValidation(loginUserNameAndPassword)) {}\n  };\n\n  const onInputChange = e => {\n    debugger;\n    let tagName = e.target.name;\n    let value = e.target.value;\n    let copyOfLoginUserNameAndPassword = { ...loginUserNameAndPassword\n    };\n    copyOfLoginUserNameAndPassword[tagName] = value;\n    setLoginUserNameAndPassword(copyOfLoginUserNameAndPassword);\n    console.log(loginUserNameAndPassword);\n    props.loginUser(loginUserNameAndPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"login-header\",\n      children: \"User Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegistrationWithInput, {\n      goToWelcomePage: goToWelcomePage,\n      onInputChange: onInputChange,\n      inputProps: user === null || user === void 0 ? void 0 : user.loginForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToWelcomePage,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"clCvMWFl5Ej3V2TfJ3TgIocL2Lo=\");\n\n_c = Login;\nexport default connect(mapStateToProps, mapDispatchtoProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/gopal.salunkhe/Desktop/assignment/src/component/login/index.js"],"names":["React","useState","RegistrationWithInput","connect","loginUser","registrationDetail","user","require","mapStateToProps","state","mapDispatchtoProps","dispatch","e","Login","props","loginUserNameAndPassword","setLoginUserNameAndPassword","checkValidation","UserDetail","userName","subscribedUser","alert","password","goToWelcomePage","onInputChange","tagName","target","name","value","copyOfLoginUserNameAndPassword","console","log","loginForm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;AACA,OAAO,aAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAkBC,kBAAlB,QAA2C,oBAA3C;;;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAAC,iCAAD,CAAlB;;AAEA,MAAMC,eAAe,GAAEC,KAAD,IAAU;AAC9B;AACA,SAAO;AACLL,IAAAA,SAAS,EAAGK,KAAK,CAACL,SADb;AAELC,IAAAA,kBAAkB,EAACI,KAAK,CAACJ;AAFpB,GAAP;AAID,CAND;;AAQA,MAAMK,kBAAkB,GAAIC,QAAD,IAAa;AACtC;AACA,SAAM;AACJP,IAAAA,SAAS,EAAEQ,CAAD,IAAM;AACdD,MAAAA,QAAQ,CAACP,SAAS,CAACQ,CAAD,CAAV,CAAR;AACD,KAHG;AAIJP,IAAAA,kBAAkB,EAAEO,CAAD,IAAM;AACvBD,MAAAA,QAAQ,CAACN,kBAAkB,CAACO,CAAD,CAAnB,CAAR;AACD;AANG,GAAN;AAQD,CAVD;;AAYA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB;AACA,QAAM,CAACC,wBAAD,EAA2BC,2BAA3B,IAA0Df,QAAQ,CAAC,EAAD,CAAxE;;AACA,QAAMgB,eAAe,GAAGC,UAAU,IAAI;AACpC;AACA,QAAIC,QAAQ,GAAGD,UAAU,CAACC,QAA1B;;AACA,QAAG,CAACb,IAAI,CAACc,cAAL,CAAoBD,QAApB,CAAJ,EAAkC;AAC9BE,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACH;;AACD,QACEf,IAAI,CAACc,cAAL,CAAoBD,QAApB,KACAb,IAAI,CAACc,cAAL,CAAoBD,QAApB,EAA8BG,QAA9B,IAA0CJ,UAAU,CAACI,QAFvD,EAGE;AACAD,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACD;AACF,GAZD;;AAcA,QAAME,eAAe,GAAG,MAAM;AAC5B,QAAIN,eAAe,CAACF,wBAAD,CAAnB,EAA+C,CAC9C;AACF,GAHD;;AAKA,QAAMS,aAAa,GAAGZ,CAAC,IAAI;AACvB;AACF,QAAIa,OAAO,GAAGb,CAAC,CAACc,MAAF,CAASC,IAAvB;AACA,QAAIC,KAAK,GAAGhB,CAAC,CAACc,MAAF,CAASE,KAArB;AACA,QAAIC,8BAA8B,GAAG,EAAE,GAAGd;AAAL,KAArC;AACAc,IAAAA,8BAA8B,CAACJ,OAAD,CAA9B,GAA0CG,KAA1C;AACAZ,IAAAA,2BAA2B,CAACa,8BAAD,CAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,wBAAZ;AACAD,IAAAA,KAAK,CAACV,SAAN,CAAgBW,wBAAhB;AACD,GATD;;AAWA,sBACE;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,qBAAD;AACE,MAAA,eAAe,EAAEQ,eADnB;AAEE,MAAA,aAAa,EAAEC,aAFjB;AAGE,MAAA,UAAU,EAAElB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAE0B;AAHpB;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAS,MAAA,OAAO,EAAET,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAWD,CA5CD;;GAAMV,K;;KAAAA,K;AA8CN,eAAeV,OAAO,CAACK,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CG,KAA5C,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport RegistrationWithInput from \"../reusable/registrationWithInputField\";\nimport \"./index.css\";\nimport {connect} from \"react-redux\";\nimport {loginUser,registrationDetail} from \"../../redux/action\";\nlet user = require(\"../../registration/registration\");\n\nconst mapStateToProps=(state) =>{\n  debugger;\n  return {\n    loginUser : state.loginUser,\n    registrationDetail:state.registrationDetail,\n  }\n}\n\nconst mapDispatchtoProps = (dispatch) =>{\n  debugger;\n  return{\n    loginUser:(e) =>{\n      dispatch(loginUser(e))\n    },\n    registrationDetail:(e) =>{\n      dispatch(registrationDetail(e))\n    }\n  }\n}\n\nconst Login = (props) => {\n  debugger;\n  const [loginUserNameAndPassword, setLoginUserNameAndPassword] = useState({});\n  const checkValidation = UserDetail => {\n    debugger;\n    let userName = UserDetail.userName;\n    if(!user.subscribedUser[userName]){\n        alert(\"user is not present in db\");\n    }\n    if (\n      user.subscribedUser[userName] &&\n      user.subscribedUser[userName].password != UserDetail.password\n    ) {\n      alert(\"please enter correct password\");\n    }\n  };\n\n  const goToWelcomePage = () => {\n    if (checkValidation(loginUserNameAndPassword)) {\n    }\n  };\n\n  const onInputChange = e => {\n      debugger\n    let tagName = e.target.name;\n    let value = e.target.value;\n    let copyOfLoginUserNameAndPassword = { ...loginUserNameAndPassword };\n    copyOfLoginUserNameAndPassword[tagName] = value;\n    setLoginUserNameAndPassword(copyOfLoginUserNameAndPassword);\n    console.log(loginUserNameAndPassword);\n    props.loginUser(loginUserNameAndPassword)\n  };\n\n  return (\n    <>\n      <label className=\"login-header\">User Login</label>\n      <RegistrationWithInput\n        goToWelcomePage={goToWelcomePage}\n        onInputChange={onInputChange}\n        inputProps={user?.loginForm}\n      />\n      < button onClick={goToWelcomePage}>Login</button>\n    </>\n  );\n};\n\nexport default connect(mapStateToProps,mapDispatchtoProps)(Login);\n"]},"metadata":{},"sourceType":"module"}