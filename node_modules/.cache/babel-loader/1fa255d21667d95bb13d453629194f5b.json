{"ast":null,"code":"var _jsxFileName = \"/home/gopal.salunkhe/Desktop/assignment/src/component/login/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport RegistrationWithInput from \"../reusable/registrationWithInputField\";\nimport \"./index.css\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    subscribedUser: state.subscribedUser,\n    loginForm: state.loginForm\n  };\n};\n\nconst Login = ({\n  subscribedUser,\n  loginForm,\n  ...props\n}) => {\n  _s();\n\n  const [loginUserNameAndPassword, setLoginUserNameAndPassword] = useState({});\n\n  const checkValidation = UserDetail => {\n    let userName = UserDetail.userName;\n\n    if (!subscribedUser[userName]) {\n      alert(\"user is not present in db\");\n    }\n\n    if (subscribedUser[userName] && subscribedUser[userName].password != UserDetail.password) {\n      alert(\"please enter correct password\");\n    }\n  };\n\n  const goToWelcomePage = () => {\n    if (checkValidation(loginUserNameAndPassword)) {}\n  };\n\n  const onInputChange = e => {\n    let tagName = e.target.name;\n    let value = e.target.value;\n    let copyOfLoginUserNameAndPassword = { ...loginUserNameAndPassword\n    };\n    copyOfLoginUserNameAndPassword[tagName] = value;\n    setLoginUserNameAndPassword(copyOfLoginUserNameAndPassword);\n    console.log(loginUserNameAndPassword);\n  };\n\n  const routPath = () => {\n    window.location.href = \"http://localhost:3000/registration\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"login-header\",\n      children: \"User Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegistrationWithInput, {\n      goToWelcomePage: goToWelcomePage,\n      onInputChange: onInputChange,\n      inputProps: loginForm,\n      userInput: loginUserNameAndPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToWelcomePage,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/registration\",\n        children: \"Sign UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"clCvMWFl5Ej3V2TfJ3TgIocL2Lo=\");\n\n_c = Login;\nexport default connect(mapStateToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/gopal.salunkhe/Desktop/assignment/src/component/login/index.js"],"names":["React","useState","RegistrationWithInput","connect","BrowserRouter","Router","Switch","Route","Link","mapStateToProps","state","subscribedUser","loginForm","Login","props","loginUserNameAndPassword","setLoginUserNameAndPassword","checkValidation","UserDetail","userName","alert","password","goToWelcomePage","onInputChange","e","tagName","target","name","value","copyOfLoginUserNameAndPassword","console","log","routPath","window","location","href"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;AACA,OAAO,aAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;;;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,cAAc,EAAED,KAAK,CAACC,cADjB;AAELC,IAAAA,SAAS,EAAEF,KAAK,CAACE;AAFZ,GAAP;AAID,CALD;;AAOA,MAAMC,KAAK,GAAG,CAAC;AAAEF,EAAAA,cAAF;AAAkBC,EAAAA,SAAlB;AAA6B,KAAGE;AAAhC,CAAD,KAA6C;AAAA;;AACzD,QAAM,CAACC,wBAAD,EAA2BC,2BAA3B,IAA0Df,QAAQ,CAAC,EAAD,CAAxE;;AACA,QAAMgB,eAAe,GAAGC,UAAU,IAAI;AACpC,QAAIC,QAAQ,GAAGD,UAAU,CAACC,QAA1B;;AACA,QAAI,CAACR,cAAc,CAACQ,QAAD,CAAnB,EAA+B;AAC7BC,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACD;;AACD,QACET,cAAc,CAACQ,QAAD,CAAd,IACAR,cAAc,CAACQ,QAAD,CAAd,CAAyBE,QAAzB,IAAqCH,UAAU,CAACG,QAFlD,EAGE;AACAD,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACD;AACF,GAXD;;AAaA,QAAME,eAAe,GAAG,MAAM;AAC5B,QAAIL,eAAe,CAACF,wBAAD,CAAnB,EAA+C,CAC9C;AACF,GAHD;;AAKA,QAAMQ,aAAa,GAAGC,CAAC,IAAI;AACzB,QAAIC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAvB;AACA,QAAIC,KAAK,GAAGJ,CAAC,CAACE,MAAF,CAASE,KAArB;AACA,QAAIC,8BAA8B,GAAG,EAAE,GAAGd;AAAL,KAArC;AACAc,IAAAA,8BAA8B,CAACJ,OAAD,CAA9B,GAA0CG,KAA1C;AACAZ,IAAAA,2BAA2B,CAACa,8BAAD,CAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,wBAAZ;AACD,GAPD;;AASA,QAAMiB,QAAQ,GAAG,MAAM;AACrBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,oCAAvB;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,qBAAD;AACE,MAAA,eAAe,EAAEb,eADnB;AAEE,MAAA,aAAa,EAAEC,aAFjB;AAGE,MAAA,UAAU,EAAEX,SAHd;AAIE,MAAA,SAAS,EAAEG;AAJb;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAA,8BACA;AAAQ,QAAA,OAAO,EAAEO,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAeD,CA/CD;;GAAMT,K;;KAAAA,K;AAiDN,eAAeV,OAAO,CAACM,eAAD,CAAP,CAAyBI,KAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport RegistrationWithInput from \"../reusable/registrationWithInputField\";\nimport \"./index.css\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nconst mapStateToProps = state => {\n  return {\n    subscribedUser: state.subscribedUser,\n    loginForm: state.loginForm\n  };\n};\n\nconst Login = ({ subscribedUser, loginForm, ...props }) => {\n  const [loginUserNameAndPassword, setLoginUserNameAndPassword] = useState({});\n  const checkValidation = UserDetail => {\n    let userName = UserDetail.userName;\n    if (!subscribedUser[userName]) {\n      alert(\"user is not present in db\");\n    }\n    if (\n      subscribedUser[userName] &&\n      subscribedUser[userName].password != UserDetail.password\n    ) {\n      alert(\"please enter correct password\");\n    }\n  };\n\n  const goToWelcomePage = () => {\n    if (checkValidation(loginUserNameAndPassword)) {\n    }\n  };\n\n  const onInputChange = e => {\n    let tagName = e.target.name;\n    let value = e.target.value;\n    let copyOfLoginUserNameAndPassword = { ...loginUserNameAndPassword };\n    copyOfLoginUserNameAndPassword[tagName] = value;\n    setLoginUserNameAndPassword(copyOfLoginUserNameAndPassword);\n    console.log(loginUserNameAndPassword);\n  };\n\n  const routPath = () => {\n    window.location.href = \"http://localhost:3000/registration\";\n  };\n  return (\n    <>\n      <label className=\"login-header\">User Login</label>\n      <RegistrationWithInput\n        goToWelcomePage={goToWelcomePage}\n        onInputChange={onInputChange}\n        inputProps={loginForm}\n        userInput={loginUserNameAndPassword}\n      />\n      <div>\n      <button onClick={goToWelcomePage}>Login</button>\n      <Link to=\"/registration\">Sign UP</Link>\n      </div>\n    </>\n  );\n};\n\nexport default connect(mapStateToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}