{"ast":null,"code":"var _jsxFileName = \"/home/gopal.salunkhe/Desktop/assignment/src/component/login/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport RegistrationWithInput from \"../reusable/registrationWithInputField\";\nimport \"./index.css\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet user = require(\"../../registration/registration\");\n\nconst mapStateToProps = state => {\n  debugger;\n  return {\n    selectedUser: state.selectedUser,\n    followers: state.followers,\n    stars: state.stars,\n    fork: state.forks,\n    issue: state.issue,\n    categories: state.category\n  };\n};\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    selectUser: e => {\n      dispatch(selectUser(e));\n    },\n    userFollower: e => {\n      dispatch(userFollower(e));\n    },\n    Forks: e => {\n      dispatch(Forks(e));\n    },\n    Issue: e => {\n      dispatch(Issue(e));\n    },\n    userStars: e => {\n      dispatch(userStars(e));\n    },\n    Category: e => {\n      dispatch(Category(e));\n    }\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  debugger;\n  const [loginUserNameAndPassword, setLoginUserNameAndPassword] = useState({});\n\n  const checkValidation = UserDetail => {\n    debugger;\n    let userName = UserDetail.userName;\n\n    if (!user.subscribedUser[userName]) {\n      alert(\"user is not present in db\");\n    }\n\n    if (user.subscribedUser[userName] && user.subscribedUser[userName].password != UserDetail.password) {\n      alert(\"please enter correct password\");\n    }\n  };\n\n  const goToWelcomePage = () => {\n    if (checkValidation(loginUserNameAndPassword)) {}\n  };\n\n  const onInputChange = e => {\n    debugger;\n    let tagName = e.target.name;\n    let value = e.target.value;\n    let copyOfLoginUserNameAndPassword = { ...loginUserNameAndPassword\n    };\n    copyOfLoginUserNameAndPassword[tagName] = value;\n    setLoginUserNameAndPassword(copyOfLoginUserNameAndPassword);\n    console.log(loginUserNameAndPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"login-header\",\n      children: \"User Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegistrationWithInput, {\n      goToWelcomePage: goToWelcomePage,\n      onInputChange: onInputChange,\n      inputProps: user === null || user === void 0 ? void 0 : user.loginForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToWelcomePage,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"clCvMWFl5Ej3V2TfJ3TgIocL2Lo=\");\n\n_c = Login;\nexport default connect(mapStateToProps, mapDispatchtoProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/gopal.salunkhe/Desktop/assignment/src/component/login/index.js"],"names":["React","useState","RegistrationWithInput","connect","user","require","mapStateToProps","state","selectedUser","followers","stars","fork","forks","issue","categories","category","mapDispatchtoProps","dispatch","selectUser","e","userFollower","Forks","Issue","userStars","Category","Login","props","loginUserNameAndPassword","setLoginUserNameAndPassword","checkValidation","UserDetail","userName","subscribedUser","alert","password","goToWelcomePage","onInputChange","tagName","target","name","value","copyOfLoginUserNameAndPassword","console","log","loginForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport RegistrationWithInput from \"../reusable/registrationWithInputField\";\nimport \"./index.css\";\nimport {connect} from \"react-redux\";\nlet user = require(\"../../registration/registration\");\n\nconst mapStateToProps=(state) =>{\n  debugger;\n  return {\n    selectedUser : state.selectedUser,\n    followers:state.followers,\n    stars:state.stars,\n    fork:state.forks,\n    issue:state.issue,\n    categories:state.category\n  }\n}\n\nconst mapDispatchtoProps = (dispatch) =>{\n  \n  return{\n    selectUser:(e) =>{\n      dispatch(selectUser(e))\n    },\n    userFollower:(e) =>{\n      dispatch(userFollower(e))\n    },\n    Forks:(e) =>{\n      dispatch(Forks(e))\n    },\n    Issue:(e) =>{\n      dispatch(Issue(e))\n    },\n    userStars:(e) =>{\n      dispatch(userStars(e))\n    },\n    Category:(e) =>{\n      dispatch(Category(e))\n    }\n  }\n}\n\nconst Login = (props) => {\n  debugger;\n  const [loginUserNameAndPassword, setLoginUserNameAndPassword] = useState({});\n  const checkValidation = UserDetail => {\n    debugger;\n    let userName = UserDetail.userName;\n    if(!user.subscribedUser[userName]){\n        alert(\"user is not present in db\");\n    }\n    if (\n      user.subscribedUser[userName] &&\n      user.subscribedUser[userName].password != UserDetail.password\n    ) {\n      alert(\"please enter correct password\");\n    }\n  };\n\n  const goToWelcomePage = () => {\n    if (checkValidation(loginUserNameAndPassword)) {\n    }\n  };\n\n  const onInputChange = e => {\n      debugger\n    let tagName = e.target.name;\n    let value = e.target.value;\n    let copyOfLoginUserNameAndPassword = { ...loginUserNameAndPassword };\n    copyOfLoginUserNameAndPassword[tagName] = value;\n    setLoginUserNameAndPassword(copyOfLoginUserNameAndPassword);\n    console.log(loginUserNameAndPassword);\n  };\n\n  return (\n    <>\n      <label className=\"login-header\">User Login</label>\n      <RegistrationWithInput\n        goToWelcomePage={goToWelcomePage}\n        onInputChange={onInputChange}\n        inputProps={user?.loginForm}\n      />\n      < button onClick={goToWelcomePage}>Login</button>\n    </>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(Login);\n"]},"metadata":{},"sourceType":"module"}